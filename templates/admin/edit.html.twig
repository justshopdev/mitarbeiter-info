{% extends 'base.html.twig' %}
{% block body %}
    <h2>{{ 'edit information'|trans }}</h2>

    {{ form_start(form) }}
    {{ form_row(form.title) }}
    {{ form_row(form.text) }}
    <label for="editor">{{ 'Text'|trans }}:</label>
    <div id="editor"></div>
    {% if form.attachments is not null %}
        <div id="news_attachments_existing">
            {% for key, attachment in form.attachments %}
                {{ form_row(attachment.delete) }}
                {{ attachment.vars.value.lable ?? '' }}
            {% endfor %}
        </div>
    {% endif %}
    {{ 'additional uploads'|trans }}:
    <div id="news_attachments_additional">
    </div>
    <div>
        <button type="submit">Submit</button>
    </div>

    <script>

        // init counter for unique field ids
        let existingAttachements = document.querySelectorAll('input[name^="news[attachments]["][name$="delete]"]');
        let attachmentFieldCounter = existingAttachements.length ?? 0;

        /**
         * create new empty input file after user selected one file
         */
        function addFileInput() {

            // cleanup and remove empty (canceled) input fields
            let newsAttachements = document.querySelectorAll('input[name^="news[attachments]["][name$="]"]')
            newsAttachements.forEach(currentAttachment => {
                if (currentAttachment.type == 'file' && currentAttachment.files.length === 0) {
                    currentAttachment.parentElement.remove();
                }
            })

            // create new input field
            let newFileInput = document.createElement('div')
            let prototypeString = '{{ form_widget(form.attachments.vars.prototype.file) }}'
            prototypeString = prototypeString.replaceAll('__name__', attachmentFieldCounter.toString())
            newFileInput.innerHTML = prototypeString
            newFileInput.querySelector('input').setAttribute('onchange', 'addFileInput()')
            newFileInput.value = null;
            document.getElementById("news_attachments_additional").appendChild(newFileInput);

            // increment counter for unique field ids
            attachmentFieldCounter++;
        }

        document.addEventListener('DOMContentLoaded', function () {

            addFileInput()

            // init quill
            const quill = new Quill('#editor', {
                theme: 'snow',
            });

            // set existing quill content
            let jsonContent = document.getElementById("news_text").value
            if (jsonContent) {
                const delta = JSON.parse(jsonContent)
                quill.setContents(delta)
            }

            var form = document.querySelector('form');
            form.onsubmit = function () {
                // set quill json data to post
                deltaObj = quill.getContents();
                document.getElementById("news_text").value = JSON.stringify(deltaObj)
            };
        })
    </script>
{% endblock %}
